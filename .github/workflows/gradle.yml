name: build

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  merge_group:

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 7

    steps:
      - uses: actions/checkout@v3
      - name: set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: gradle
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Build with Gradle
        run: ./gradlew build
      - name: Run unit tests
        run: ./gradlew test
      - name: Run Checkstyle
        run: ./gradlew checkstyle

  androidTest:
    needs: build
    runs-on: macos-latest
    timeout-minutes: 17

    strategy:
      matrix:
        api-level: [ 30 ]
        arch: [ x86_64 ]
        first-boot-delay: [1000]

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
      - name: AVD cache
        uses: actions/cache@v3
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-${{ matrix.api-level }}
      - name: Create AVD snapshot for caching
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: false
          script: echo "AVD snapshot for caching finished"
      - name: Run Android tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          disable-animations: true
          profile: Nexus 6
          script: |
            ./gradlew connectedCheck --stacktrace
            if [ $? -eq 0 ]; then
              echo "All tests passed"
            else
              echo "Some tests failed"
              mkdir -p test-results
            fi
      - name: Upload test report as artifact
        if: ${{ always() }}
        uses: actions/upload-artifact@v3
        with:
          name: test-reports
          retention-days: 3
          path: '*/build/reports/androidTests'

